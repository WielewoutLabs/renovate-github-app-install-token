name: Pipeline

on:
  push:
    branches:
      - main
  pull_request: {}

permissions:
  contents: read

jobs:
  vars:
    name: Vars
    runs-on: ubuntu-24.04
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Release please
        if: github.ref_type == 'branch' && github.ref_name == 'main'
        id: release_please
        uses: googleapis/release-please-action@v4.2.0
        with:
          release-type: simple
          target-branch: ${{ github.ref_name }}
          config-file: .github/release-please.json
      - name: Expose vars
        id: vars
        run: |-
          release_version="${{ steps.release_please.outputs.releases_created == 'true' && steps.release_please.outputs.tag_name || '' }}"
          release_version="${release_version#"v"}"
          echo "release_version=$release_version" >> $GITHUB_OUTPUT
          release_version_major="$(echo "$release_version" | cut -d . -f 1)"
          echo "release_version_major=$release_version_major" >> $GITHUB_OUTPUT
          release_version_minor="$(echo "$release_version" | cut -d . -f 2)"
          echo "release_version_minor=$release_version_minor" >> $GITHUB_OUTPUT
          release_version_patch="$(echo "$release_version" | cut -d . -f 3)"
          echo "release_version_patch=$release_version_patch" >> $GITHUB_OUTPUT
    outputs:
      is_release: ${{ steps.release_please.outputs.releases_created == 'true' }}
      release_name: ${{ steps.release_please.outputs.tag_name }}
      release_version: ${{ steps.vars.outputs.release_version }}
      release_version_major: ${{ steps.vars.outputs.release_version_major }}
      release_version_minor: ${{ steps.vars.outputs.release_version_minor }}
      release_version_patch: ${{ steps.vars.outputs.release_version_patch }}
      release_upload_url: ${{ steps.release_please.outputs.upload_url }}
      release_html_url: ${{ steps.release_please.outputs.html_url }}
      is_main_branch: ${{ github.ref_type == 'branch' && github.ref_name == 'main' }}

  build:
    name: Build
    needs:
      - vars
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3.4.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5.7.0
        with:
          images: |
            ghcr.io/wielewoutlabs/renovate-github-app-install-token
          flavor: |
            latest=false
          tags: |
            type=edge
            type=raw,enable=${{ needs.vars.outputs.is_release }},priority=901,value=${{ needs.vars.outputs.release_version }}
            type=raw,enable=${{ needs.vars.outputs.is_release }},priority=900,value=${{ needs.vars.outputs.release_version_major }}.${{ needs.vars.outputs.release_version_minor }}
            type=raw,enable=${{ needs.vars.outputs.is_release }},priority=900,value=${{ needs.vars.outputs.release_version_major }}
            type=ref,event=pr
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3.6.0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.10.0
      - name: Build and push
        uses: docker/build-push-action@v6.17.0
        with:
          context: .
          file: Containerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          annotations: ${{ steps.meta.outputs.annotations }}
